from aiogram import types, F, Router
from aiogram.filters import CommandStart, Command
from .utils import get_stock_price, get_price_for_russian_stock



router = Router()

@router.message(Command('quote'))
async def cmd_quote(message:types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: AAPL")



# async def process_ticker(message: types.Message, state: FSMContext):
#     ticker = message.text.upper()
#     try:
#         try:
#             price = get_stock_price(ticker)  
#             await message.answer(
#                 f"üìä –ö–æ—Ç–∏—Ä–æ–≤–∫–∞ {ticker}: {price:.2f} USD\n"
#                 "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏, –≤–≤–µ–¥–∏—Ç–µ /quote"
#             )
#         except Exception as e:
#             price = get_price_for_russian_stock(ticker)  
#             await message.answer(
#                 f"üìä –ö–æ—Ç–∏—Ä–æ–≤–∫–∞ {ticker}: {price:.2f} RUB\n"
#                 "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏, –≤–≤–µ–¥–∏—Ç–µ /quote"
#             )
            
#     except Exception as e:
#         await message.answer(
#             "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —ç—Ç–æ–º—É —Ç–∏–∫–µ—Ä—É.\n"
#             "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: AAPL, SBER).\n"
#             "–î–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∏–∫–µ—Ä—ã –±–µ–∑ .ME"
#         )
    
#     await state.clear()



@router.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω–Ω—ã—Ö –±—É–º–∞–≥. –ò—Å–ø–æ–ª—å–∑—É–π /quote –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ—Ç–∏—Ä–æ–≤–∫–∏.')