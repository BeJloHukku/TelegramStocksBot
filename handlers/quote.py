from aiogram import types, F
from utils import get_stock_price, get_price_for_russian_stock
from aiogram.fsm.context import FSMContext
from states import Form
import logging

logger = logging.getLogger(__name__)

async def cmd_quote(message:types.Message, state: FSMContext):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–æ—Ç–∏—Ä–æ–≤–∫—É")
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∞–∫—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: AAPL")
    await state.set_state(Form.waiting_for_ticket)


async def process_ticker(message: types.Message, state: FSMContext):
    ticker = message.text.upper()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª —Ç–∏–∫–µ—Ä: {ticker}")
    try:
        try:
            price = get_stock_price(ticker)  
            await message.answer(
                f"üìä –ö–æ—Ç–∏—Ä–æ–≤–∫–∞ {ticker}: {price:.2f} USD\n"
                "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏, –≤–≤–µ–¥–∏—Ç–µ /quote"
            )
        except Exception as e:
            logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ yfinance: {e}")
            price = get_price_for_russian_stock(ticker)  
            await message.answer(
                f"üìä –ö–æ—Ç–∏—Ä–æ–≤–∫–∞ {ticker}: {price:.2f} RUB\n"
                "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏, –≤–≤–µ–¥–∏—Ç–µ /quote"
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–∏–∫–µ—Ä–∞ {ticker}: {e}")
        await message.answer(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —ç—Ç–æ–º—É —Ç–∏–∫–µ—Ä—É.\n"
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: AAPL, SBER).\n"
            "–î–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∏–∫–µ—Ä—ã –±–µ–∑ .ME"
        )
    
    await state.clear()